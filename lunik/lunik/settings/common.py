"""
Django settings for Lunik project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import string

from django.urls import reverse_lazy
from django.contrib.messages import constants as messages
import dj_database_url
from decouple import config, Csv
import django_heroku

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = os.environ.get("SECRET_KEY")

#-- Admins Emails
ADMINS = (
    ('Fernando Cota', 'ing.fernandocota@gmail.com')
)

MANAGERS = ADMINS

#-- Cookie shop cart
CART_COOKIE_NAME = 'cart'
SESSION_COOKIE_NAME = config('COOKIE_NAME',default='cookiesession')
SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'
SITE_ID = 1
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#DEBUG = config('DEBUG',default=True,cast=bool)
ALLOWED_HOSTS = ['*']


# Application definition
DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    #'django.contrib.sessions',
    'user_sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.humanize',
]

THIRD_PARTY_APPS = [
    'sorl.thumbnail',
    'django_summernote',
    'compressor'
]

PANEL_APPS = [
    'panel.accounts',
    'panel.authorization',
    'panel.config',
    'panel.core',
    'panel.products',
    'panel.orders',
    'panel.website'
]

PORTAL_APPS = [
    'portal.cover',
    'portal.shop'
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + PANEL_APPS + PORTAL_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'user_sessions.middleware.SessionMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.gzip.GZipMiddleware',

    #-- Login Middleware
    'panel.core.middleware_authorization.LoginRequiredMiddleware',
    'panel.core.middleware_permissions.CheckPermissionsMiddleware',
]

SESSION_ENGINE = 'user_sessions.backends.db'

ROOT_URLCONF = 'lunik.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'django.template.context_processors.media',
                'django.template.context_processors.static',

                'panel.core.context_processors.data_panel',
                'panel.core.context_processors.menu_user',
                #'panel.core.context_processors.menu_top',
                'panel.core.context_processors.module_action',
                'panel.core.context_processors.module_name',
                'panel.core.context_processors.cart',
                'panel.core.context_processors.products_menu',
                

            ],
        },
    },
]

WSGI_APPLICATION = 'lunik.wsgi.application'
THUMBNAIL_DEBUG = True
THUMBNAIL_REDIS_PORT = 6379
THUMBNAIL_PRESERVE_FORMAT=True
THUMBNAIL_FORCE_OVERWRITE = True
#-- User model custom
AUTH_USER_MODEL = 'accounts.User'
#-- Authorization URLs
LOGIN_URL = '/panel/login/'
LOGOUT_REDIRECT_URL = '/panel/login/'
LOGIN_REDIRECT_URL = reverse_lazy('authorization:dashboard')
LOGIN_EXEMPT_URLS = (
    r'^$',
    r'inicio/',
    r'panel/login/',
    r'media/',
    r'panel/accounts/activation/(?P<uidb64>[0-9A-Za-z_\-]+)/(?P<token>[0-9A-Za-z]{1,13}-[0-9A-Za-z]{1,20})/$',
    r'recovery/',
    r'panel/recovery/',
    r'summernote/',
    r'checkout/',
    r'carrito/',
    r'cart/',
    r'detalle/',
    r'productos/',
)
# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get("DATABASE_URL")
    )
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql', # database engine
#                  'HOST': '127.0.0.1', #database host
#                  'PORT': 3306, # database port
#                  'USER': 'root', # database username
#                  'PASSWORD': 'cotaGalvez', # database user password
#                  'NAME': 'dev_lunik' # database name
#     },
# }
AUTHENTICATION_BACKENDS = (
    'panel.core.authentication_email.EmailAuthBackend',
)
#-- MESSAGES CONSTANTS
MESSAGE_TAGS = {
    messages.INFO : 'alert-info',
    messages.SUCCESS : 'alert-success',
    messages.WARNING : 'alert-warning',
    messages.ERROR : 'alert-danger',
}

#-- SUMMERNOTE EDITOR
SUMMERNOTE_CONFIG = {
    'toolbar': [
        ['style', ['style']],
        ['style', ['bold', 'italic', 'underline', 'clear']],
        ['para', ['ul', 'ol', 'height']],
        ['insert', ['link', 'picture']],
        ['view', ['codeview']],
    ],
    # You can put custom Summernote settings
    'summernote': {
        # As an example, using Summernote Air-mode
        'airMode': False,

        # Change editor size
        'width': '100%',
        'height': '280',

        # Or, set editor language/locale forcely
        'lang': 'es-MX',

        # You can also add custom settings for external plugins
        'print': {
            'stylesheetUrl': '/some_static_folder/printable.css',
        },
    },
}
SUMMERNOTE_THEME = 'bs4'

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'es-mx'

TIME_ZONE = 'America/Mazatlan'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# -- Date Format for Templates
DATE_FORMAT = 'd F Y'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATIC_URL = '/static/'
COMPRESS_ROOT = os.path.join(BASE_DIR,'static')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

COMPRESS_ENABLED = True
#COMPRESS_OFFLINE = True

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

#STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder'
)

django_heroku.settings(locals())
